# Ultralytics YOLO ðŸš€, AGPL-3.0 license
# YOLOv8-seg instance segmentation model. For Usage examples see https://docs.ultralytics.com/tasks/segment

# Parameters
nc: 80  # number of classes
scales: # model compound scaling constants, i.e. 'model=yolov8n-seg.yaml' will call yolov8-seg.yaml with scale 'n'
  # [depth, width, max_channels]
  n: [0.33, 0.25, 1024]
  s: [0.33, 0.50, 1024]
  m: [0.67, 0.75, 768]
  l: [1.00, 1.00, 512]
  x: [1.00, 1.25, 512]

# YOLOv8.0n backbone
backbone:
  # [from, repeats, module, args]
  - [-1, 1, Conv, [64, 3, 2]] # 0-P1/2 
  - [-1, 1, Conv, [128, 3, 2]] # 1-P2/4 (160)
  - [-1, 3, C2f, [128, True]]
  - [-1, 1, Conv, [256, 3, 2]] # 3-P3/8 (80)
  - [-1, 6, C2f, [256, True]]
  - [-1, 1, Conv, [512, 3, 2]] # 5-P4/16 (40)
  - [-1, 6, C2f, [512, True]]
  - [-1, 1, Conv, [1024, 3, 2]] # 7-P5/32 (20)
  - [-1, 3, C2f, [1024, True]]
  - [-1, 1, SPPF, [1024, 5]] # 9

# YOLOv8.0n head
head:
  - [-1, 1, nn.Upsample, [None, 2, 'nearest']] #10 ï¼ˆ40ï¼‰
  - [[-1, 6], 1, Concat, [1]]  # cat backbone P4 #11
  - [-1, 3, C2f, [512]]  # 12
  - [ -1,1, ResCCAv2,[2]] #13

  - [-1, 1, nn.Upsample, [None, 2, 'nearest']] #14 ï¼ˆ80ï¼‰
  - [[-1, 4], 1, Concat, [1]]  # cat backbone P3 15
  - [-1, 3, C2f, [256]]  # 16 (P3/8-small)
  - [ -1,1, ResCCAv2,[2]] #17

  - [-1, 1, nn.Upsample, [None, 2, 'nearest']] #18 ï¼ˆ160ï¼‰
  - [[-1, 2], 1, Concat, [1]]  # cat backbone P3 19
  - [-1, 3, C2f, [128]]  # 20 (P3/8-small)
  - [ -1,1, ResCCAv2,[2]] #21

  - [-1, 1, Conv, [128, 3, 2]] #22  (80)
  - [[-1, 16], 1, Concat, [1]]  # 23 cat head P4
  - [-1, 3, C2f, [256]]  # 24 (P4/16-medium)
  - [ -1,1, ResCCAv2,[2]] #25

  - [-1, 1, Conv, [256, 3, 2]] #26
  - [[-1, 12], 1, Concat, [1]]  # 27 cat head P4
  - [-1, 3, C2f, [512]]  # 28 (P4/16-medium)
  - [ -1,1, ResCCAv2,[2]] #29

  - [-1, 1, Conv, [512, 3, 2]] #30
  - [[-1, 9], 1, Concat, [1]]  # 31 cat head P5
  - [-1, 3, C2f, [1024]]  # 32 (P5/32-large)
  - [ -1,1, ResCCAv2,[2]] #33

  - [[21, 25,29, 33], 1, Segment, [nc, 32, 256]]  # Segment(P3, P4, P5)
